<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>3. Longest Substring Without Repeating Characters</title>
      <link href="/2020/06/20/leetcode-3LongestSubstringWithoutRepeatingCharacters/"/>
      <url>/2020/06/20/leetcode-3LongestSubstringWithoutRepeatingCharacters/</url>
      
        <content type="html"><![CDATA[<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>题目地址: <span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbG9uZ2VzdC1zdWJzdHJpbmctd2l0aG91dC1yZXBlYXRpbmctY2hhcmFjdGVycy8=">3. Longest Substring Without Repeating Characters<i class="fa fa-external-link-alt"></i></span></p><p><strong>Example 1:</strong></p><p>&nbsp;&nbsp;&nbsp; Input: “abcabcbb”</p><p>&nbsp;&nbsp;&nbsp; Output: 3</p><p>&nbsp;&nbsp;&nbsp; Explanation: The answer is “abc”, with the length of 3.</p><p><strong>Example 2:</strong></p><p>&nbsp;&nbsp;&nbsp; Input: “bbbbb”</p><p>&nbsp;&nbsp;&nbsp; Output: 1</p><p>&nbsp;&nbsp;&nbsp; Explanation: The answer is “b”, with the length of 1.</p><p><strong>Example 3:</strong></p><p>&nbsp;&nbsp;&nbsp; Input: “pwwkew”</p><p>&nbsp;&nbsp;&nbsp; Output: 3</p><p>&nbsp;&nbsp;&nbsp; Explanation: The answer is “wke”, with the length of 3.</p><h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><h4 id="1-解决办法-滑动窗口"><a href="#1-解决办法-滑动窗口" class="headerlink" title="1.解决办法 滑动窗口"></a>1.解决办法 滑动窗口</h4><p>解决思路:滑动窗口，每次查看当前最长子字符串是当前位置字符是否在字串中，如果没有扩大字串，如果有，那将字符字串左侧滑动到重复位置。</p><h5 id="java-实现"><a href="#java-实现" class="headerlink" title="java 实现"></a>java 实现</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = s.length();</span><br><span class="line">        Set&lt;Character&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>, i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; n &amp;&amp; j &lt; n) &#123;</span><br><span class="line">            <span class="comment">// try to extend the range [i, j]</span></span><br><span class="line">            <span class="keyword">if</span> (!set.contains(s.charAt(j)))&#123;</span><br><span class="line">                set.add(s.charAt(j++));</span><br><span class="line">                ans = Math.max(ans, j - i);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                set.remove(s.charAt(i++));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h4><p>算法时间复杂度为O(n)</p><h4 id="2-解决办法-优化滑动窗口"><a href="#2-解决办法-优化滑动窗口" class="headerlink" title="2.解决办法 优化滑动窗口"></a>2.解决办法 优化滑动窗口</h4><p>解决思路:使用一个128位的数组存贮每个字符所在位置,每次更新到最新位置，遍历整个数组,即可找到最长。</p><h5 id="java-实现-1"><a href="#java-实现-1" class="headerlink" title="java 实现"></a>java 实现</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = s.length(), ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span>[] index = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">128</span>]; <span class="comment">// current index of character</span></span><br><span class="line">        <span class="comment">// try to extend the range [i, j]</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>, i = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            i = Math.max(index[s.charAt(j)], i);</span><br><span class="line">            ans = Math.max(ans, j - i + <span class="number">1</span>);</span><br><span class="line">            index[s.charAt(j)] = j + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="算法分析-1"><a href="#算法分析-1" class="headerlink" title="算法分析"></a>算法分析</h4><p>算法时间复杂度为O(n)</p>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2. Add Two Numbers</title>
      <link href="/2020/06/19/leetcode-2AddTwoNumbers/"/>
      <url>/2020/06/19/leetcode-2AddTwoNumbers/</url>
      
        <content type="html"><![CDATA[<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>题目地址: <span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYWRkLXR3by1udW1iZXJzLw==">2 Add Two Numbers<i class="fa fa-external-link-alt"></i></span></p><p>You are given <strong>two non-empty</strong> linked lists representing two non-negative integers. The digits are stored in <strong>reverse order</strong> and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.</p><p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p><p><strong>Example:</strong></p><p>&nbsp;&nbsp;&nbsp; <strong>Input</strong>: (2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)</p><p>&nbsp;&nbsp;&nbsp; <strong>Output</strong>: 7 -&gt; 0 -&gt; 8</p><p>&nbsp;&nbsp;&nbsp; <strong>Explanation</strong>: 342 + 465 = 807.</p><h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><h4 id="1-解决办法-同时遍历相加"><a href="#1-解决办法-同时遍历相加" class="headerlink" title="1.解决办法 同时遍历相加"></a>1.解决办法 同时遍历相加</h4><p>解决思路:因为两数字非负，所以不考虑负数相加，同时遍历两数组,同数位的数字相加，但同时可能有进位，所以要加上进位。</p><h5 id="java-实现"><a href="#java-实现" class="headerlink" title="java 实现"></a>java 实现</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">addTwoNumbers</span><span class="params">(ListNode l1, ListNode l2)</span> </span>&#123;</span><br><span class="line">    ListNode dummyHead = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">    ListNode p = l1, q = l2, curr = dummyHead;</span><br><span class="line">    <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="keyword">null</span> || q != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> x = (p != <span class="keyword">null</span>) ? p.val : <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> y = (q != <span class="keyword">null</span>) ? q.val : <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> sum = carry + x + y;</span><br><span class="line">        carry = sum / <span class="number">10</span>;</span><br><span class="line">        curr.next = <span class="keyword">new</span> ListNode(sum % <span class="number">10</span>);</span><br><span class="line">        curr = curr.next;</span><br><span class="line">        <span class="keyword">if</span> (p != <span class="keyword">null</span>) p = p.next;</span><br><span class="line">        <span class="keyword">if</span> (q != <span class="keyword">null</span>) q = q.next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (carry &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        curr.next = <span class="keyword">new</span> ListNode(carry);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dummyHead.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h3><p>算法时间复杂度为O(Max(m,n)),其中m，n分别是数组长度</p>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1. Two Sum</title>
      <link href="/2020/06/03/leetcode-1TwoSum/"/>
      <url>/2020/06/03/leetcode-1TwoSum/</url>
      
        <content type="html"><![CDATA[<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>题目地址: <span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdHdvLXN1bS8=">1 Tow Sum<i class="fa fa-external-link-alt"></i></span></p><p>Given an array of integers, return <strong>indices</strong> of the two numbers such that they add up to a specific target.</p><p>You may  assume that each input would have <strong><em>exactly</em></strong> one solution, and you may not use the same element twice.</p><p><strong>Example:</strong></p><p>&nbsp;&nbsp;&nbsp; Given nums = [2, 7, 11, 15], target = 9,</p><p>&nbsp;&nbsp;&nbsp; Because nums[0] + nums[1] = 2 + 7 = 9,</p><p>&nbsp;&nbsp;&nbsp; return [ <strong>0, 1</strong> ].</p><h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><h4 id="1-map-解决办法"><a href="#1-map-解决办法" class="headerlink" title="1. map 解决办法"></a>1. map 解决办法</h4><p>解决思路: 遍历数组， <strong>目标值()-当前遍历值</strong> 的结果为所要寻找的另一个加数,为了可以O(1)时间复杂度取出另一个加数，可以将数组存入map中，map的键为数组中的数据，值为其所在序号。</p><h5 id="c语言实现"><a href="#c语言实现" class="headerlink" title="c语言实现"></a>c语言实现</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">twoSum</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i, <span class="built_in">max</span>, <span class="built_in">min</span>;</span><br><span class="line">    <span class="built_in">max</span> = <span class="built_in">min</span> = nums[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; numsSize; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[i] &gt; <span class="built_in">max</span>) <span class="built_in">max</span> = nums[i];</span><br><span class="line">        <span class="keyword">if</span>(nums[i] &lt; <span class="built_in">min</span>) <span class="built_in">min</span> = nums[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> *<span class="built_in">map</span>   = (<span class="keyword">int</span>*)<span class="built_in">calloc</span>((<span class="built_in">max</span>-<span class="built_in">min</span>+<span class="number">1</span>), <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">    <span class="keyword">int</span> *reval = (<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; numsSize; <span class="built_in">map</span>[nums[i]-<span class="built_in">min</span>] = ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> lookfornum = target - nums[i];</span><br><span class="line">        <span class="keyword">if</span>(lookfornum &lt; <span class="built_in">min</span> || lookfornum &gt; <span class="built_in">max</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> dis = lookfornum - <span class="built_in">min</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[dis]) &#123;</span><br><span class="line">            reval[<span class="number">0</span>] = i;</span><br><span class="line">            reval[<span class="number">1</span>] = <span class="built_in">map</span>[dis] <span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(<span class="built_in">map</span>);</span><br><span class="line">    <span class="keyword">return</span> reval;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="java-实现"><a href="#java-实现" class="headerlink" title="java 实现"></a>java 实现</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">    Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> complement = target - nums[i];</span><br><span class="line">        <span class="keyword">if</span> (map.containsKey(complement)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[] &#123; map.get(complement), i &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        map.put(nums[i], i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"No two sum solution"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h3><p>算法时间复杂度为O(n)</p>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 中有关日期时间的使用</title>
      <link href="/2020/05/20/java-date/"/>
      <url>/2020/05/20/java-date/</url>
      
        <content type="html"><![CDATA[<h3 id="老方法-Date-SimpleDateFormat-Calender"><a href="#老方法-Date-SimpleDateFormat-Calender" class="headerlink" title="老方法: Date, SimpleDateFormat,Calender"></a><del>老方法: Date, SimpleDateFormat,Calender</del></h3><p>(JDK8 以上不建议使用)</p><p>Java原先使用的是Date类，如何获取相应的年月日十分秒，都是需要使用SimpleDateFormat来处理，但是SimpleDateFormat，（原有的getYear()等方法已经被弃用</p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Date date = <span class="keyword">new</span> Date();</span><br><span class="line">System.out.println(date);</span><br><span class="line">SimpleDateFormat sf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"YYYY-MM-dd HH:mm:ss"</span>);</span><br><span class="line">System.out.println(sf.format(date));</span><br></pre></td></tr></table></figure><p>result:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Tue May 19 23:50:58 CST 2020</span><br><span class="line">2020-05-19 23:50:58</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SimpleDateFormat format = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"YYYY-MM-dd"</span>);</span><br><span class="line">Calendar calendar = Calendar.getInstance();</span><br><span class="line">calendar.add(Calendar.MONTH, <span class="number">0</span>);</span><br><span class="line">calendar.set(Calendar.DAY_OF_MONTH,<span class="number">1</span>);</span><br><span class="line">String firstday = format.format(calendar.getTime());</span><br><span class="line">calendar = Calendar.getInstance(); </span><br><span class="line">calendar.add(Calendar.MONTH, <span class="number">1</span>); </span><br><span class="line">calendar.set(Calendar.DAY_OF_MONTH, <span class="number">0</span>); </span><br><span class="line">String lastday = format.format(calendar.getTime());</span><br><span class="line">System.out.println(<span class="string">"本月第一天和最后一天分别是："</span> + firstday + <span class="string">" 和 "</span> + lastday + <span class="string">"。"</span>);</span><br></pre></td></tr></table></figure><p>result:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">本月第一天和最后一天分别是：<span class="number">2020</span>-<span class="number">05</span>-<span class="number">01</span> 和 <span class="number">2020</span>-<span class="number">05</span>-<span class="number">31</span>。</span><br></pre></td></tr></table></figure><h3 id="新方法LocalDate-LocalTiem-LocalDateTime"><a href="#新方法LocalDate-LocalTiem-LocalDateTime" class="headerlink" title="新方法LocalDate,LocalTiem,LocalDateTime"></a>新方法LocalDate,LocalTiem,LocalDateTime</h3><ul><li><p>LocalDate的使用方法</p><ul><li><p>构造</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//LocaDate 的两种构造方法</span></span><br><span class="line"><span class="comment">//获取当前时间</span></span><br><span class="line">LocalDate localDate = LocalDate.now();</span><br><span class="line"><span class="comment">//获取指定时间</span></span><br><span class="line">LocalDate localDate1 = localDate.of(<span class="number">2020</span>,<span class="number">05</span>,<span class="number">20</span>);</span><br></pre></td></tr></table></figure><p>result:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2020-05-20</span><br><span class="line">2020-05-20</span><br></pre></td></tr></table></figure></li><li><p>获取年月日,有两种获取方式，一种是直接之使用本地时间，一种是设置时间</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取当前年份</span></span><br><span class="line"><span class="keyword">int</span> year = localDate.getYear();</span><br><span class="line"><span class="comment">//获取指定年份</span></span><br><span class="line"><span class="keyword">int</span> year1 = localDate.get(ChronoField.YEAR);</span><br></pre></td></tr></table></figure></li><li><p>获取月份</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取当前时间在一个月的哪一天</span></span><br><span class="line"><span class="keyword">int</span> day = localDate.getDayOfMonth();</span><br><span class="line"><span class="comment">//获取指定日期的在一个月的哪一天</span></span><br><span class="line"><span class="keyword">int</span> day1 = localDate.get(ChronoField.DAY_OF_MONTH);</span><br></pre></td></tr></table></figure></li><li><p>获取一个星期中的哪一天</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取当前时间在一个星期的哪一天</span></span><br><span class="line">DayOfWeek dayOfWeek = localDate.getDayOfWeek();</span><br><span class="line"><span class="comment">//获取指定时间在一个星期的哪一天</span></span><br><span class="line"><span class="keyword">int</span> dayOfWeek1 = localDate.get(ChronoField.DAY_OF_WEEK);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>LocalTime的使用方法 </p><ul><li>构造<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取当前时间</span></span><br><span class="line">LocalTime localTime = LocalTime.now();</span><br><span class="line"><span class="comment">//获取指定时间，如12：11：11</span></span><br><span class="line">LocalTime localTime1 = LocalTime.of(<span class="number">12</span>,<span class="number">11</span>,<span class="number">11</span>);</span><br></pre></td></tr></table></figure></li><li>获取小时<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//获取分钟</span></span><br><span class="line"><span class="keyword">int</span> minute = localTime.getMinute();</span><br><span class="line"><span class="keyword">int</span> minute1 = localTime.get(ChronoField.MINUTE_OF_HOUR);</span><br></pre></td></tr></table></figure></li><li>获取分钟<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取分钟</span></span><br><span class="line"><span class="keyword">int</span> minute = localTime.getMinute();</span><br><span class="line"><span class="keyword">int</span> minute1 = localTime.get(ChronoField.MINUTE_OF_HOUR);</span><br></pre></td></tr></table></figure></li><li>获取秒数<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取秒</span></span><br><span class="line"><span class="keyword">int</span> second = localTime.getSecond();</span><br><span class="line"><span class="keyword">int</span> second1 = localTime.get(ChronoField.SECOND_OF_MINUTE);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>LocalDateTime的使用</p><ul><li>LocalDateTime 获取年月日时分秒<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建</span></span><br><span class="line">LocalDateTime localDateTime = LocalDateTime.now();</span><br><span class="line">LocalDateTime localDateTime1 = LocalDateTime.of(<span class="number">2020</span>, <span class="number">05</span>, <span class="number">20</span>, <span class="number">12</span>,<span class="number">12</span>,<span class="number">12</span>);</span><br><span class="line"><span class="comment">//获取LocalDate</span></span><br><span class="line">LocalDate localDate = localDateTime.toLocalDate();</span><br><span class="line"><span class="comment">//获取LocalTime</span></span><br><span class="line">LocalTime localTime1 = localDateTime.toLocalTime();</span><br></pre></td></tr></table></figure></li><li>日期的运算<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">localDateTime = localDateTime.plusYears(<span class="number">1</span>);</span><br><span class="line">localDateTime = localDateTime.plus(<span class="number">1</span>, ChronoUnit.YEARS);</span><br><span class="line">localDateTime = localDateTime.minusMonths(<span class="number">1</span>);</span><br><span class="line">localDateTime = localDateTime.minus(<span class="number">1</span>,ChronoUnit.MONTHS);</span><br><span class="line"><span class="comment">//通过with 修改</span></span><br><span class="line">localDateTime = localDateTime.withYear(<span class="number">2021</span>);</span><br><span class="line">localDateTime = localDateTime.with(ChronoField.YEAR,<span class="number">2020</span>);</span><br></pre></td></tr></table></figure></li><li>格式化日期时间<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String s1 = localDate.format(DateTimeFormatter.BASIC_ISO_DATE);</span><br><span class="line">String s2 = localDate.format(DateTimeFormatter.ISO_LOCAL_DATE);</span><br><span class="line"><span class="comment">//自定义格式化</span></span><br><span class="line">DateTimeFormatter dateTimeFormatter =   DateTimeFormatter.ofPattern(<span class="string">"dd/MM/yyyy"</span>);</span><br><span class="line">String s3 = localDate.format(dateTimeFormatter);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Instant的用法</p><ul><li>创建Instant<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Instant instant = Instant.now();</span><br></pre></td></tr></table></figure></li><li>获取秒数<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> currentSecond = instant.getEpochSecond();</span><br></pre></td></tr></table></figure></li><li>获取毫秒<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> currentMilli = instant.toEpochMilli();</span><br></pre></td></tr></table></figure></li></ul></li><li><p>ZonedDateTime时区相关类</p><ul><li>构造 <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ZonedDateTime zonedDateTime = ZonedDateTime.now();</span><br><span class="line">ZonedDateTime zonedDateTime1 = ZonedDateTime.now(ZoneId.of(<span class="string">"America/Los_Angeles"</span>));</span><br><span class="line">LocalDateTime localDateTime = LocalDateTime.now();</span><br><span class="line">ZoneId zoneId = ZoneId.of(<span class="string">"America/Los_Angeles"</span>);</span><br><span class="line">ZonedDateTime zonedDateTime1 = ZonedDateTime.of(localDateTime,zoneId);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Period,Duration 处理时间差</p><ul><li>Period: 处理日期时间差<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LocalDate date = LocalDate.of(<span class="number">2017</span>,<span class="number">7</span>,<span class="number">22</span>);</span><br><span class="line">LocalDate date1 = LocalDate.now();</span><br><span class="line">Period period = Period.between(date,date1);</span><br></pre></td></tr></table></figure></li><li>Duration 处理时间差<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LocalTime time = LocalTime.of(<span class="number">20</span>,<span class="number">30</span>);</span><br><span class="line">LocalTime time1 = LocalTime.of(<span class="number">23</span>,<span class="number">59</span>);</span><br><span class="line">Duration duration = Duration.between(time,time1);</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> data </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装ubuntu</title>
      <link href="/2020/05/17/install-ubuntu/"/>
      <url>/2020/05/17/install-ubuntu/</url>
      
        <content type="html"><![CDATA[<h3 id="Win10与Ubuntu-16-04双系统安装教程"><a href="#Win10与Ubuntu-16-04双系统安装教程" class="headerlink" title="Win10与Ubuntu 16.04双系统安装教程"></a>Win10与Ubuntu 16.04双系统安装教程</h3><h3 id="安装前准备工作"><a href="#安装前准备工作" class="headerlink" title="安装前准备工作"></a>安装前准备工作</h3><h4 id="制作启动U盘"><a href="#制作启动U盘" class="headerlink" title="制作启动U盘"></a>制作启动U盘</h4><p>我是使用U盘的方式来安装Ubuntu系统的，因此主要介绍这种方式。</p><a id="more"></a><p>首先需要准备好一个2G以上的空U盘（因为之后的操作需要格式化，所以空U盘最好）。</p><p>在Ubuntu官网下载<span class="exturl" data-url="aHR0cHM6Ly93d3cudWJ1bnR1LmNvbS9kb3dubG9hZA==">Ubuntu<i class="fa fa-external-link-alt"></i></span><br>的ISO安装文件。如果上面的链接有问题，可以从<span class="exturl" data-url="aHR0cHM6Ly93d3cudWJ1bnR1LmNvbS9kb3dubG9hZC9hbHRlcm5hdGl2ZS1kb3dubG9hZHM=">这里<i class="fa fa-external-link-alt"></i></span>使用BT方式下载，<br>或者在其他mirror站点下载。</p><p>按照官网步骤下载<span class="exturl" data-url="aHR0cHM6Ly9ydWZ1cy5ha2VvLmllLw==">Rufus<i class="fa fa-external-link-alt"></i></span>并使用上一步中下载好的ISO文件制作启动U盘：<span class="exturl" data-url="aHR0cHM6Ly93d3cudWJ1bnR1LmNvbS9kb3dubG9hZC9kZXNrdG9wL2NyZWF0ZS1hLXVzYi1zdGljay1vbi13aW5kb3dz">How to create a bootable USB stick on Windows<i class="fa fa-external-link-alt"></i></span></p><h4 id="电脑磁盘分区"><a href="#电脑磁盘分区" class="headerlink" title="电脑磁盘分区"></a>电脑磁盘分区</h4><p>在安装系统之前，需要事先给它分配一定的磁盘空间。其实也可以直接在非Windows系统盘（C盘）上直接安装，但是这样的话如果以后想对Ubuntu系统有单独的操作（比如删除或者别的）就会比较麻烦，所以建议给Ubuntu系统单独分配一定的空间。</p><p>在Win10系统中，我们可以通过控制面板/系统和安全/管理工具/创建并格式化硬盘分区，进入磁盘管理工具。 磁盘管理工具<br>选择一个剩余容量多的分区，右键 &gt; 压缩卷 &gt; 选择合适大小 ，我选择的是100G(一般50G就够用了）</p><p>现在准备工作就绪，可以准备安装了。</p><h3 id="安装Ubuntu系统"><a href="#安装Ubuntu系统" class="headerlink" title="安装Ubuntu系统"></a>安装Ubuntu系统</h3><h4 id="设置BIOS为U盘启动"><a href="#设置BIOS为U盘启动" class="headerlink" title="设置BIOS为U盘启动"></a>设置BIOS为U盘启动</h4><p>将制作好的启动U盘插在电脑上，重启电脑，开机时进入BIOS选择从U盘启动。</p><p>不同品牌的电脑BIOS设置不同，请自行百度。</p><h4 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h4><p>等待片刻，进入Ubuntu系统欢迎界面，选择中文，点击右侧“<span style="color:red">安装Ubuntu</span>”开始安装。 欢迎界面 也可以选左边先使用Ubuntu系统体验一下（此时没有安装），然后从桌面左上角双击“安装Ubuntu 16.04LTS”图标开始安装。</p><p>准备安装界面，勾选“<span style="color:red">为图形或无线硬件…</span>”，然后点击“继续”（还需要等待一小会儿）。 准备安装界面注意：如果这步花费时间很长说明是网络问题，请关闭无线网络，拔掉网线之后再重试。</p><p>安装类型界面，选择“<span style="color:red">其他选项</span>”，然后“<span style="color:red">继续</span>”。</p><p>接下来是关键的分配分区环节。 分配分区界面 我最大的疑问也在这里，大部分资料认为应该划分四个分区，分别为挂载为“/”，“/home”，“交换空间”和“/boot”。</p><p>此处有争议，我在这里给出我安装时的分配方案：</p><table><thead><tr><th>分区</th><th>类型</th><th>位置</th><th>文件系统</th><th>挂载点</th><th>大小（100G）</th></tr></thead><tbody><tr><td>“/”</td><td>逻辑分区</td><td>起始位置</td><td>Ext4</td><td>/</td><td>约1/3，34G</td></tr><tr><td>home</td><td>逻辑分区</td><td>起始位置</td><td>Ext4</td><td>/home</td><td>剩余所有</td></tr><tr><td>交换空间</td><td>逻辑分区</td><td>起始位置</td><td></td><td>交换空间</td><td>内存二倍</td></tr><tr><td>/boot</td><td>逻辑分区</td><td>起始位置</td><td>Ext4</td><td>/boot</td><td>200MB</td></tr></tbody></table><p>注意：安装启动引导器的设备选择“/boot分区”</p><p>eufi启动方式安装</p><table><thead><tr><th>分区</th><th>类型</th><th>位置</th><th>文件系统</th><th>挂载点</th><th>大小（100G）</th></tr></thead><tbody><tr><td>“/”</td><td>逻辑分区</td><td>起始位置</td><td>Ext4</td><td>/</td><td>约1/3，34G</td></tr><tr><td>home</td><td>逻辑分区</td><td>起始位置</td><td>Ext4</td><td>/home</td><td>剩余所有</td></tr><tr><td>交换空间</td><td>逻辑分区</td><td>起始位置</td><td></td><td>交换空间</td><td>内存二倍</td></tr><tr><td>/efi</td><td>逻辑分区</td><td>起始位置</td><td>Ext4</td><td>/efi</td><td>1G</td></tr></tbody></table><p>注意：安装启动引导器的设备选择“/efi分区”<br>下面的说明引用自Windows下安装Ubuntu 16.04双系统：</p><p>&lt;1&gt;、“/”分区大致相当于windows下的系统盘（C盘），存放系统文件，当在Ubuntu下安装一些软件时，有可以选择路径的，就可以选择“/home”里面,即自定义软件安装路径，但还有一些不能选择安装路径的，就会安装到“/”分区，大部分软件是默认安装到“/”分区下的。还有一点就是这个分区下是不能像平时一样选择”删除”、”复制”、”粘贴”的，选择一个文件或文件夹，右键，是没有这些”删除”…选项的（我不确定是不是所有的文件和文件夹都是这样，毕竟我没有都试一遍）。（当然可以通过一些命令来实现”删除”、”复制”、”粘贴”、”新建”这些功能的，）</p><p>&lt;2&gt;、“/home”分区，这个就相当于windows下的非系统盘，像D盘、E盘、F盘…，除了一些特殊的文件，可以像在windows下一样，任意”删除”、”复制”、”粘贴”、”新建”，平时下载的东西都会保存在这个分区，这个分区主要就是用来存放文件。</p><p>&lt;3&gt;、”交换空间”，虚拟内存。我总共为这个Ubuntu系统分配了70G的空间，根据我的需要”/” –30G, ”/home“–35G，“交换空间”–5G,由于想把Ubuntu作为我的主系统，需要多安装一些自己编程，学习，平时使用的一些琐碎的软件，所以我把”/”分区分的大了一些。（之前用Ubuntu14.04也是这么分的，当我安装了我需要的软件之　后，满足编程，平时办公之后，”/”分区大概还剩下17-18G，”/home”还剩下20多G，当然是因为，我把能选则安装路径的大都安装在了”/home”下，还下载了7-8G 的视频放在了”/home“下，我把我之前的磁盘使用情况说一下，希望会在你们分配空间大小时能够有所帮助）</p><p>当上面的分区分好之后，点击”现在安装“,再次确认分区，然后一路简单的“选择位置”、“键盘布局”、“创建用户”之后继续，开始安装，请耐心等待。 正在安装界面</p><p>安装成功后重启电脑，如果你在之前的步骤中在安装启动引导器的设备选择“/boot分区”的话，此时会自动进入Windows系统，此时需要添加系统启动项才能进入新系统。</p><h3 id="双系统兼容问题"><a href="#双系统兼容问题" class="headerlink" title="双系统兼容问题"></a>双系统兼容问题</h3><p>经过上面的步骤，Win10和Ubuntu双系统已经安装成功了。但是经常在两个系统间切换的朋友可能会发现它们之间有一些兼容的问题，下面介绍其中一些我遇到的问题。</p><h4 id="同步系统时间"><a href="#同步系统时间" class="headerlink" title="同步系统时间"></a>同步系统时间</h4><p>下面解决方案引用自：解决ubuntu和windows双系统时间差异8小时的方法及Win10+Ubuntu双系统安装完成后时间不一致相差大概8小时</p><p>Windows/Ubuntu 双系统用户会发现在 Ubuntu 里面的时间正常的情况下Windows的系统时间被改到8小时前。原来 Linux 操作系统是以 CMOS 时间做为格林威治标准时间，再根据系统设置的时区来确定目前系统时间。但是Windows 会直接修改CMOS 时间。而中国的时区是+8区，所以才会造成时间被调整了-8个小时。</p><p>所以您可以让 Windows 去使用时区或者让 Ubuntu 使用本地时间。</p><p>解决方案如下：</p><p>Windows：(此方法没有测试）</p><p>修改 Windows 使用时区的方法是在注册表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TimeZoneInformation\</span><br></pre></td></tr></table></figure><p>下面增加一个名为RealTimeIsUniversal的REG_DWORD键，并赋值为1。</p><p>Ubuntu(16.04之前)：</p><p>而让Ubuntu 使用本地时间的方法是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/default/rcS</span><br></pre></td></tr></table></figure><p>把里面的UTC=yes改为UTC=no</p><p>Ubuntu(16.04及以后)：</p><p>打开终端输入</p><p>先在Ubuntu下更新一下时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ntpdate</span><br></pre></td></tr></table></figure><p>使用window的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ntpdate time.windows.com</span><br></pre></td></tr></table></figure><p>将时间更新到硬件上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hwclock --localtime --systohc</span><br></pre></td></tr></table></figure><p>回车重启！OK了</p><h3 id="故障现象"><a href="#故障现象" class="headerlink" title="故障现象"></a>故障现象</h3><p>先安装Windows10 SP1 64位版，后使用U盘安装Ubuntu 14.04.1。Ubuntu安装成功后，可正常启动，而GRUB上选择Windows 10菜单项，无法启动到Win10界面，直接返回GRUB菜单界面。</p><p>解决办法 <span class="exturl" data-url="aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY2FpbWFnaWMvYXJ0aWNsZS9kZXRhaWxzLzM5NTMyOTEx">这里<i class="fa fa-external-link-alt"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简介</title>
      <link href="/2020/05/15/home/"/>
      <url>/2020/05/15/home/</url>
      
        <content type="html"><![CDATA[<h2 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h2><p>建立本站是因为当时去查LaTeX，在一个个人博客下知道GitHub Pages，因此就查东西，弄出来了这个东西。</p><h2 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h2><p>本站建立目的是学习和分享，因为使用了免费的域名，可能不稳定</p><a id="more"></a><h2 id="使用技术"><a href="#使用技术" class="headerlink" title="使用技术"></a>使用技术</h2><p>服务器：<span class="exturl" data-url="aHR0cHM6Ly9wYWdlcy5naXRodWIuY29tLw==">GitHub Pages<i class="fa fa-external-link-alt"></i></span><br>引擎： <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3Mv">Hexo<i class="fa fa-external-link-alt"></i></span><br>模板： <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0">NexT<i class="fa fa-external-link-alt"></i></span></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
